name: aarch_image
on:
  push:
    branches:
      - main
jobs:
  aarch_job:
    name: Build on ubuntu-22.04 aarch
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Semantic Release
        id: semantic
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        uses: cycjimmy/semantic-release-action@v3
      - name: Gatsby build
        if: steps.semantic.outputs.new_release_published == 'true'
        run: npm run build
        env:
          STRAPI_TOKEN: ${{ secrets.STRAPI_TOKEN }}        
          STRAPI_API_URL: ${{ vars.STRAPI_API_URL }}
          MYURL: ${{ vars.MYURL }}
      - name: Login to DockerHub
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check the outputs of semantic release
        run: |
          echo "new release version: ${{ steps.semantic.outputs.new_release_version }}"
          echo "last release version: ${{ steps.semantic.outputs.last_release_version }}"
      - name: Build and push
        id: docker_build
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ steps.semantic.outputs.new_release_version }}
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm64
      - name: Image digest
        if: steps.semantic.outputs.new_release_published == 'true'
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Set kubernetes deployment with this image
        if: steps.semantic.outputs.new_release_published == 'true'
        run: ssh -i ${{ secrets.OCI_TOKEN }} ${{ secrets.NODE }} kubectl set image deployment/${{ vars.DEPLOY_NAME }} ${{ vars.CONTAINER }}=${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ steps.semantic.outputs.new_release_version }}
